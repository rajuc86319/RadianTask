@model RegistrationTaskMVC.Models.User

@{
	ViewBag.Title = "RegisterUser";
}

<h2>User Registration</h2>


@using (Html.BeginForm("RegisterUser", "Register", FormMethod.Post))
{
	@Html.AntiForgeryToken()

<div class="form-horizontal">

	<hr />
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })

	<div class="form-group">
		@Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.DropDownListFor(model=>model.Country, (IEnumerable<SelectListItem>)ViewBag.Countries, "--Select Country--", new { onchange = "FillState()" })
			@Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.DropDownListFor(model => model.State,
	new SelectList(Enumerable.Empty<SelectListItem>(), "StateNames", "StateNames"),
		   "Select State",
		   new { @class = "form-control" })

			@Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-group">
		<div class="col-md-offset-2 col-md-10">
			<input type="checkbox" name="terms" id="terms" onchange="activateButton(this)">  I Agree Terms & Coditions
			<br><br>
			</div>
		</div>
			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<input type="submit" id="Login" value="Register" disabled="disabled" class="btn btn-default" />
				</div>
			</div>
		</div>
		}

		<div>
			@Html.ActionLink("Back to Register", "RegisterUser")
		</div>

		@section Scripts {
			@Scripts.Render("~/bundles/jqueryval")
			<script>
				function FillState() {
					jQuery.support.cors = true;
					var Id = $('#Country').val();
					//var text = $("#Country option:selected").text();
					//$('#Country').val(text);
					$.ajax({
						url: 'http://localhost:52844/api/States',
						type: "GET",
						dataType: "JSON",
						data: { countryId: Id },
						success: function (states) {
							$("#State").html(""); // clear before appending new list
							$.each(states, function (i, state) {
								$("#State").append(
									$('<option></option>').val(state.StateNames).html(state.StateNames));
							});
						}
					});
				}
				function activateButton(element)
				{
					if (element.checked) {
						document.getElementById("Login").disabled = false;
					}
					else {
						document.getElementById("Login").disabled = true;
					}
				}

			</script>

		}
